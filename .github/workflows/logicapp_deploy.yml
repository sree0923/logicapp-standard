# Docs for the Azure Web Apps Deploy action: https://github.com/azure/functions-action
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: (classic) Build and Deploy Logic App. 

env:
  LA_NAME: 'la-name-324234'

on:
  workflow_dispatch:
      inputs:
        folders:
          description: "Comma-separated list of folders to deploy"
          required: true                                    
        branch:
          description: "Target branch to sync to (e.g., develop, qa, main)"
          required: true
          type: choice
          options:
            - develop
            - qa
            - main
        environment:
          description: "environment"
          required: true
          type: choice
          options:
            - develop
            - qa
            - prod


jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3
     
    - name: Parse Selected Folders
      id: parse-folders
      run: |
        echo "FOLDERS=$(echo '${{ github.event.inputs.folders }}' | tr ',' ' ')" >> $GITHUB_ENV
        
    - name: Set Environment from User Input Branch
      id: set-env
      run: |
        branch="${{ github.event.inputs.branch }}"
        echo "Target branch: $branch"

        if [[ "$branch" == "develop" || "$branch" == feature/* ]]; then
          echo "env=dev" >> $GITHUB_ENV
        elif [[ "$branch" == "qa" ]]; then
          echo "env=qa" >> $GITHUB_ENV
        elif [[ "$branch" == "release"* ]]; then
          echo "env=release" >> $GITHUB_ENV
        elif [[ "$branch" == "main" ]]; then
          echo "env=prod" >> $GITHUB_ENV
        else
          echo "Unknown branch: $branch; exiting."
          exit 1
        fi

    - name: Generate Matrix for Selected Folders
      id: set-matrix
      run: |
        SELECTED_FOLDERS=($FOLDERS)
        MATRIX="[]"
        JSON=$(cat app.json)
    
        for folder in "${SELECTED_FOLDERS[@]}"; do
          ENTRY=$(echo "$JSON" | jq -c ".${{ env.env }}[] | select(.folder == \"$folder\")")
          if [[ ! -z "$ENTRY" ]]; then
            MATRIX=$(echo "$MATRIX" | jq ". + [$ENTRY]")
          else
            echo "Folder $folder not found in environment ${{ env.env }}"
            exit 1
          fi
        done
    
        # Properly format the output as a single-line JSON string
        MATRIX=$(echo "$MATRIX" | jq -c ".")
        echo "Generated MATRIX: $MATRIX"
        echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

    - name: Log Generated Matrix
      run: |
       echo "Matrix: ${{ steps.set-matrix.outputs.matrix }}"

  # logic_app_deploy: 
  #   name: Deploy 
  #   runs-on: ubuntu-latest
  #   needs: [logic_app_build]
  #   environment: 
  #     name: Dev
  #   steps: 
  #   - name: Checkout
  #     uses: actions/checkout@v1    
  #   - name: Login via Az module
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{secrets.AZURE_CREDENTIALS}}
  #       enable-AzPSSession: true 
  #   - uses: actions/download-artifact@master
  #     with:
  #       name: logic
  #       path: ./output/
        
  #   - name: Get publish Profile
  #     id: publishprofile
  #     uses: azure/powershell@v1
  #     with:
  #       inlineScript: |
  #         $profile = Get-AzWebAppPublishingProfile `
  #             -ResourceGroupName ${{ secrets.RG_LA }} `
  #             -Name ${{ env.LA_NAME }}
  #         $profile = $profile.Replace("`r", "").Replace("`n", "")
  #         Write-Output "::set-output name=profile::$profile"
  #       azPSVersion: latest

  #   - name: Deploy to Azure Logic App
  #     uses: Azure/functions-action@v1.3.1
  #     id: la
  #     with:
  #       app-name: ${{secrets.RG_LA}}
  #       package: './output/logic.zip'
  #       publish-profile: ${{steps.publishprofile.outputs.profile}}

  #   - name: Swap parameter files 
  #     id: params
  #     uses: azure/CLI@v1
  #     with:
  #       inlineScript: |
  #         az functionapp deploy --resource-group ${{ secrets.RG_LA }} --name ${{ env.LA_NAME }} --src-path  logic/azure.parameters.json --type static --target-path parameters.json
